//= require ./jquery
//= require ./typeahead.jquery.js
//= require ./bootstrap
//= require lunr.min

/* global $, lunr */

"use strict";

var lunrIndex = null;
var lunrData  = null;

// Download index data
$.ajax({
  url: "<%= search_index_path %>",
  cache: true,
  method: 'GET',
  success: function(data) {
    lunrData = data;
    lunrIndex = lunr.Index.load(lunrData.index);
  }
});

/*
$(document).on('submit', '.dw-search', function(event) {
  event.preventDefault();
});

$(document).on('input', '.dw-search input', function(event) {
  var $target = $(event.target);

  var results = lunrIndex.search($target.val());

  if (results.length > 3) {
    results = results.slice(0, 3);
  }

  var docs = results.map(function(r) {
    return lunrData.docs[r.ref];
  });

  var $sections = $('.dw-sections');

  $sections.find('[data-id]').each(function(i, el) {
    var $section = $(el);
    var highlight = docs.some(function(d) { return d.id == $section.attr('data-id'); });
    $section.toggleClass('highlight', highlight);
  });

  var $menu = $target.parent().find('.dropdown-menu');

  $menu
    .toggle(docs.length > 0)
    .empty();

  docs.forEach(function(doc, idx) {
    var $li = $("<li><a href='"+doc.url+"'>"+doc.title+"</a></li>").appendTo($menu);

    if (doc.header_details.length > 0) {
      var $ul = $('<ul></ul>').appendTo($li);
      doc.header_details.forEach(function(header) {
        $ul.append('<li><a href="'+doc.url+'#'+header.id+'">'+header.title+"</a></li>");
      });
    }

    if (idx < docs.length-1) {
      $menu.append('<li role="separator" class="divider"></li>');
    }
  });

  // Maybe color red if no matches
});

// Escape should hide dropdown
// Should be able to navigate dropdown with keyboard
*/

function doSearch(q) {
  var results = lunrIndex.search(q);

  if (results.length > 3) {
    results = results.slice(0, 3);
  }

  var docs = results.map(function(r) {
    return lunrData.docs[r.ref];
  });

  var suggestions = [];

  docs.forEach(function(doc) {
    suggestions.push(doc);

    doc.header_details.forEach(function (header) {
      suggestions.push({
        title: header.title,
        url: doc.url + '#' + header.id,
        nested: true
      });
    });
  });

  return suggestions;
}

$(document).ready(function() {
  var typeaheadLastVal;

  var $typeaheadEl = $('.dw-search input');
  var typeahead = $typeaheadEl.typeahead({
    hint: false,
    highlight: false,
    minLength: 1,
    classNames: {
      menu: 'dropdown-menu'
    }
  },
  {
    name: 'docs',
    limit: 100,

    source: function(q, cb) {
      typeaheadLastVal = q;
      var suggestions = doSearch(q);
      cb(suggestions);
    },

    templates: {
      suggestion: function(value) {
        var className = value.nested ? "nested" : '';
        return "<div class='" + className + "'>" + value.title + "</div>";
      }
    }
  });

  typeahead.bind('typeahead:cursorchange', function() {
    // Don't update value when changing cursor
    $typeaheadEl.typeahead('val', typeaheadLastVal);
  });

  typeahead.bind('typeahead:select', function(ev, suggestion) {
    // Don't update value while waiting for load
    $typeaheadEl.typeahead('val', typeaheadLastVal);

    window.location = suggestion.url;
  });

  $('.dw-search').on('submit', function(event) {
    var q = $typeaheadEl.val();

    var suggestion = doSearch(q)[0];

    if (suggestion) {
      window.location = suggestion.url;
    }

    event.preventDefault();
    return false;
  });

  $('.dw-search').show();
});